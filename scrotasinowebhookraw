--[[DI BAWAH INI JANGAN DI EDIT!!!]]--
nl = "\n"
function mf(n)
  return math.floor(n/32)
end
worlds = {}
start = startFrom
ends = #worldList
aa = os.time()
for i = start, ends do
 table.insert(worlds, worldList[i])
end
function main()
  for _,list in pairs(worlds) do

function takeP()
   for _,tile in pairs(getTiles()) do
      if tile.fg == PickaxePos or tile.bg == PickaxePos then
         findPath(tile.x,tile.y) 
         sleep(1000)
         collectSet(true,2)
         sleep(500)
         collectSet(false,2)
         if findItem(98) > 0 then
            break
         end
      end
   end
end

function dropPick()
    sendPacket(2, "action|drop\n|itemID|" .. 98)
    sendPacket(2, "action|dialog_return\ndialog_name|drop_item\nitemID|" .. 98 .. "|\ncount|" .. findItem(98) - 1)
    sleep(1000)
end

function PickaxeControl()
    if TakePickaxe == "yes" and findItem(98) == 0 then
        warp(PickaxeWorld,PickaxeWorldID)
        sleep(500)
        takeP()
        sleep(3000)
        if findItem(98) > 0 then
            wear(98)
            sleep(2000)
            dropPick()
            sleep(1000)
            if findItem(98) > 1 then
                warp(PickaxeWorld,PickaxeWorldID)
                dropPick()
                sleep(1000)
            end
        else
            while findItem(98) == 0 do
                sleep(5000)
                warp(PickaxeWorld,PickaxeWorldID)
                sleep(500)
                takeP()
                sleep(3000)
                if findItem(98) > 0 then
                    wear(98)
                    sleep(2000)
                    dropPick()
                    sleep(1000)
                    if findItem(98) > 1 then
                        warp(PickaxeWorld,PickaxeWorldID)
                        dropPick()
                        sleep(1000)
                    end
                end
            end
        end
    end
    if findItem(98) > 1 then
        warp(PickaxeWorld,PickaxeWorldID)
        dropPick()
        sleep(1000)
    end
end

function warp(world,id)
    sendPacket(3, "action|join_request\nname|"..string.upper(world).. "\ninvitedWorld|0") 
    sleep(5000)
    sendPacket(3, "action|join_request\nname|" .. string.upper(world) .. "|" .. string.upper(id).. "\ninvitedWorld|0") 
    sleep(5000)
end

function recon(worldzz, dooridzz, xx, yy)
 if getBot().captcha == "Couldn't solve" then
    disconnect()
    powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\n:loudspeaker: BOT DOING\n------------\n\n<:PoorGT:964672185811742790> Chapcha not solved\nBot try  to reconnect\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12")
    sleep(10000)
    connect()
    if getBot().status == "online" then
      sleep(3000)
      warp(worldzz ,dooridzz) 
      sleep(2000)
      findPath(xx,yy) 
      sleep(1000)
      aa = os.time()
      aaa = os.time()-aa
      powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\nTime got restarted\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\n:loudspeaker: BOT DOING\n------------\n\n<:ExcellentGT:964672053624078407> Bot Reconnected\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12") 
    end
end
while getBot().status == "online" and getTile(math.floor(getBot().x/32),math.floor(getBot().y/32)).fg == 6 do
   sleep(3000)   
   warp(worldzz ,dooridzz) 
   sleep(1000)
   findPath( xx, yy)
   sleep(300)
end
if getBot().status ~= "online" then
   powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\n:loudspeaker: BOT DOING\n------------\n\n<:PoorGT:964672185811742790> Bot Disconnected\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12")
end
  while getBot().status ~= "online" do
      connect() 
      sleep(10000)
    if getBot().status == "online" then
      sleep(3000)
      warp(worldzz ,dooridzz) 
      sleep(2000)
      findPath(xx,yy) 
      sleep(1000)
      aa = os.time()
      aaa = os.time()-aa
      powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\nTime got restarted\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\n:loudspeaker: BOT DOING\n------------\n\n<:ExcellentGT:964672053624078407> Bot Reconnected\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12") 
    end
  end
end

function setPos(a1,b1)
  findPath((a1),(b1))  
  sleep(1000)
  pnb() 
  sleep(500)
end

function pnb5()
    collectSet(true,3)
    place(blockId,-1,-2)
    sleep(DelayPlace)
    place(blockId,-1,-1)
    sleep(DelayPlace)
    place(blockId,-1,0)
    sleep(DelayPlace)
    place(blockId,-1,1)
    sleep(DelayPlace)
    place(blockId,-1,2)
    sleep(DelayPlace)
  for i = 1,hit,1 do
      punch(-1,-2)
      sleep(DelayPunch)
      punch(-1,-1)
      sleep(DelayPunch)
      punch(-1,0)
      sleep(DelayPunch)
      punch(-1,1)
      sleep(DelayPunch)
      punch(-1,2)
      sleep(DelayPunch)
   end
   sleep(50)
   recon(list,dooridfarm,posX,posY)
end

function pnb4()
    collectSet(true,3)
    place(blockId,-1,-2)
    sleep(DelayPlace)
    place(blockId,-1,-1)
    sleep(DelayPlace)
    place(blockId,-1,0)
    sleep(DelayPlace)
    place(blockId,-1,1)
    sleep(DelayPlace)
  for i = 1,hit,1 do
      punch(-1,-2)
      sleep(DelayPunch)
      punch(-1,-1)
      sleep(DelayPunch)
      punch(-1,0)
      sleep(DelayPunch)
      punch(-1,1)
      sleep(DelayPunch)
   end
   sleep(50)
   recon(list,dooridfarm,posX, posY)
end

function pnb3()
    collectSet(true,2)
    place(blockId,-1,-1)
    sleep(DelayPlace)
    place(blockId,-1,0)
    sleep(DelayPlace)
    place(blockId,-1,1)
    sleep(DelayPlace)
  for i = 1,hit,1 do
      punch(-1,-1)
      sleep(DelayPunch)
      punch(-1,0)
      sleep(DelayPunch)
      punch(-1,1)
      sleep(DelayPunch)
   end
   sleep(50)
   recon(list,dooridfarm,posX, posY)
end

function pnb2()
    collectSet(true,2)
    place(blockId,-1,-1)
    sleep(DelayPlace)
    place(blockId,-1,0)
    sleep(DelayPlace)
  for i = 1,hit,1 do
      punch(-1,-1)
      sleep(DelayPunch)
      punch(-1,0)
      sleep(DelayPunch)
   end
   sleep(50)
   recon(list,dooridfarm,posX, posY)
end

function pnb1()
    collectSet(true,1)
    place(blockId,-1,0)
    sleep(DelayPlace)
  for i = 1,hit,1 do
      punch(-1,0)
      sleep(DelayPunch)
   end
   sleep(50)
   recon(list,dooridfarm,posX, posY)
end

function pnb()
    while findItem(blockId) > 0 do
        if findItem(seedId) >= 180 then
            collectSet(false,0)
            break
        end
	if PnbTile == 1 then
           pnb1()
	elseif PnbTile == 2 then
           pnb2()
	elseif PnbTile == 3 then
           pnb3()
	elseif PnbTile == 4 then
           pnb4()
	elseif PnbTile == 5 then
           pnb5()
        end
    end
end


function plant() 
  for _,tile in pairs(getTiles()) do
    if tile.fg ~= 0 and tile.fg ~= seedId and getTile(tile.x,tile.y - 1).fg == 0 then
      if findItem(seedId) == 0 then
        break
      end
      findPath(tile.x,tile.y - 1) 
      sleep(160)
      place(seedId,0,0) 
      sleep(DelayPlant)
      collect(2) 
      sleep(50)
      recon(list,dooridfarm,tile.x,tile.y-1)
    end
  end
end

function harvest()
    for _,tile in pairs(getTiles()) do
      if tile.fg == seedId and getTile(tile.x,tile.y).ready then
         if findItem(blockId) >= 180 then
             break
         end
         findPath(tile.x,tile.y) 
         sleep(160)
         punch(0,0) 
         sleep(DelayHarvest)
         collect(2) 
         sleep(50)
         recon(list,dooridfarm,tile.x,tile.y)
      end
   end
end


function clear()
  for _,i in ipairs(trash) do
    if findItem(i) > 0 then 
      local tresh = findItem(i)
      sendPacket(2, "action|trash\n|itemID|".. i)
      sleep(500)
      sendPacket(2, "action|dialog_return\ndialog_name|trash_item\nitemID|" .. i .. "|\ncount|" .. tresh) 
      sleep(700)
      tresh = nil
    end
  end
end

function buyi()
   while findItem(112) > packPrice do
      sendPacket(2,"action|buy\nitem|"..packName)
      sleep(3000)
      if findItem(112) < packPrice then
         break
      end
   end
end

function droppack()
   collectSet(false,0)
   warp(packWorld,dooridpack) 
   sleep(400)
   buyi()
   sleep(500)
   for _,tile in pairs(getTiles()) do
      if tile.fg == packPos or tile.bg == packPos then
         findPath(tile.x-1,tile.y) 
         sleep(1000)
         recon(packWorld,dooridpack,tile.x-1,tile.y)
         sleep(2000)
         for i=1,tiledrop do
  	    for _,ab in ipairs(packList) do
      	       while findItem(ab) ~= 0 do
      	 	  local peck = findItem(ab)
      	 	  sendPacket(2,"action|drop\n|itemID|"..ab)
      	 	  sleep(2000)
      	 	  sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..ab.."|\ncount|" .. peck)
      	 	  sleep(2000)
      	 	  peck = nil
      	 	  move(1,0)       
                  sleep(1000)
      	       end
   	    end
         end
      end
   end
   aaa = os.time()-aa
   powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\n:loudspeaker: BOT DOING\n------------\nBot scanning profit\n"..infoPack().."\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12")
   sleep(2000)
   warp(list,dooridfarm) 
   sleep(2000)   
end

function dropseed()
   collectSet(false,0)
   warp(seedWorld,dooridseed) 
   sleep(400)
   for _,tile in pairs(getTiles()) do
      if tile.fg == seedPos or tile.bg == seedPos then
         findPath(tile.x-1,tile.y) 
         sleep(1000)
         recon(seedWorld,dooridseed,tile.x-1,tile.y)
         for i=1,tiledrop do
            while findItem(seedId) > 130 do
      	       if findItem(seedId) <= 110 then
         	  break
      	       end
      	       drop(seedId,30)
      	       sleep(2000)
               move(1,0)
               sleep(1000)
            end
         end
      end
   end
   aaa = os.time()-aa
   powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\n:loudspeaker: BOT DOING\n------------\n Scanning Seed profit\n\n"..infoPack().."\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12")
   sleep(2000)
   warp(list,dooridfarm) 
   sleep(2000)
end

items = {
{name = "laser grid seed",id = 5667},
{name = "laser grid block",id = 5666},
{name = "pepper seed",id = 4585},
{name = "pepper block",id = 4584},
{name = "chand seed",id = 341},
{name = "chand block",id = 340},
{name = "fish tank seed",id = 3005},
{name = "fish tank block",id = 3004},
{name = "ssp",id = 5706 },
{name = "street sign",id = 986},
{name = "gargoyle",id = 988},
{name = "gothic building",id = 990}, 
{name = "streetlamp",id = 992}, 
{name = "sidewalk",id = 994},
{name = "tenement building",id = 996}, 
{name = "fire escape",id = 998}, 
{name = "fire hydrant",id = 1002}, 
{name = "hedge",id = 1004},
{name = "blue mailbox",id = 1006}, 
{name = "atm machine",id = 1008}, 
{name = "world lock",id = 242},
{name = "surg e",id = 4296},
{name = "surgical anesthetic",id = 1262},
{name = "surgical antibiotics",id = 1266}, 
{name = "surgical antisepti",id = 1264}, 
{name = "surgical clamp",id = 4314},
{name = "surgical defibrillator",id = 4312}, 
{name = "surgical lab kit",id = 4318}, 
{name = "surgical pins",id = 4308}, 
{name = "surgical scalpel",id = 1260},
{name = "surgical splint",id = 1268}, 
{name = "surgical sponge",id = 1258},
{name = "surgical stitches",id = 1270},
{name = "surgical transfusion",id = 4310},
{name = "surgical ultrasound",id = 4316},
    } -- List of item info

function getIP()
    local cmd = io.popen('powershell -command "Get-NetIPAddress -AddressFamily IPv4 -InterfaceIndex $(Get-NetConnectionProfile | Select-Object -ExpandProperty InterfaceIndex) | Select-Object -ExpandProperty IPAddress"')
    IP = cmd:read("*l")
    cmd:close()
    return IP
end

function getCpu()
    local cmd = io.popen('powershell -command "Get-WmiObject Win32_Processor | Measure-Object -Property LoadPercentage -Average | Select -ExpandProperty Average"')
    local cpu = cmd:read("*l")
    cmd:close()
    return cpu
end

function getRam()
    local cmd = io.popen('powershell -command "$CompObject =  Get-WmiObject -Class WIN32_OperatingSystem; $Memory = ((($CompObject.TotalVisibleMemorySize - $CompObject.FreePhysicalMemory)*100)/ $CompObject.TotalVisibleMemorySize); [math]::Round($Memory, 0)"')
    local ram = cmd:read("*l")
    cmd:close()
    return ram
end

function ready()
  count = 0
   for _, tile in pairs(getTiles()) do
      if tile.fg == seedId and tile.ready then
        count = count + 1
      end
    end
  return count
end

function unready()
  count = 0
   for _, tile in pairs(getTiles()) do
      if tile.fg == seedId and not tile.ready then
        count = count + 1
      end
    end
  return count
end

function fossil(id)
  local m=0
  for _,til in pairs(getTiles()) do
      if til.fg == id then 
         m = m + 1
      end
  end
  return m
end

function scanseed(id)
   local m=0
   for _,object in pairs(getObjects()) do
       if object.id==id then 
          m=m + object.count
       end
   end
   return m
end

function itemInfo(ids)
    local result = {name = "null", id = ids}
    for _,item in pairs(items) do
        if item.id == ids then
            result.name = item.name
            return result
        end
    end
    return result
end

function infoPack()
    local store = {}
    for _,obj in pairs(getObjects()) do
        if store[obj.id] then
            store[obj.id].count = store[obj.id].count + obj.count
        else
            store[obj.id] = {id = obj.id, count = obj.count}
        end
    end
    local str = ""
    for _,object in pairs(store) do
        str = str.."\n"..itemInfo(object.id).name.." : x"..object.count
    end
    return str
end

function powershell(message)
local script = [[
$webHookUrl = ']] ..webhook.. [['
$cpu = (Get-WmiObject win32_processor | Measure-Object -property LoadPercentage -Average | Select Average).Average
$ram = (Get-Counter '\Memory\Available MBytes').CounterSamples.CookedValue[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
[System.Collections.ArrayList]$embedArray = @()

$title       = '**Rotation Script Logs**'

$color       = '1'

$description = ']] .. message .. [['
$footerObject = @{
        text = 'Date & Time : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[['
    }
$thumbnailObject = @{
            url = 'https://media.discordapp.net/attachments/1035446353008001038/1045320042922922014/20221124_194825.png?width=390&height=390'        
            }

}

$embedObject = [PSCustomObject]@{
    title       = $title
    description = $description
    username    = $user
    color       = $color
    thumbnail   = $thumbnailObject
    footer      = $footerObject
}

$embedArray.Add($embedObject) | Out-Null

$payload = [PSCustomObject]@{

    embeds = $embedArray

}
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType 'application/json'
  ]]
  
local pipe = io.popen("powershell -WindowStyle Hidden -ExecutionPolicy Bypass -command -", "w")
  pipe:write(script)
  pipe:close()
end

    PickaxeControl()
    sleep(500)
    warp(list,dooridfarm) 
    sleep(500)
    tt = os.time()
    aaa = os.time()-aa
    powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\nReady / Unready :"..ready().." / "..unready().."\n:loudspeaker: BOT DOING\n------------\nStart Harvesting Three\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12")
    repeat
      harvest() 
      sleep(100)
      setPos(posX,posY) 
      sleep(100)
      plant() 
      sleep(100)
      clear()
      sleep(100)
      if findItem(seedId) > 130 then
        dropseed()
        sleep(500)
      elseif findItem(112) > MinimumGems and KeepGems == false then
        droppack()
        sleep(500)
      elseif getBot().slots <= minimBackpack then
         sendPacket(2,"action|buy\nitem|upgrade_backpack")
         sleep(3000)
      end
      sleep(2000)
        until 
      getBot().world == list and ready(seedId) == 0
      plant(seedId) 
      sleep(200)
      tt = os.time() - tt
      aaa = os.time()-aa
      powershell("\n:crown: BOT INFO\n------------\nName :||"..getBot().name.."|| "..getBot().level.." lvl\nStatus :"..getBot().status.."\nCaptcha : "..getBot().captcha.."\nGems :"..findItem(112).." /"..getBot().slots.." Slots \n Uptime :"..math.floor(aaa/86400).." Days "..math.floor(aaa%86400/3600).." Hours "..math.floor(aaa%3600/60).." Minutes\n:earth_asia: WORLD INFO\n------------ \nName :||"..getBot().world.."|| \n Fossil :"..fossil(3918).."\nReady / Unready :"..ready().." / "..unready().."\n:loudspeaker: BOT DOING\n------------\n Finished the world\n:timer:Time has passed :"..math.floor(tt%86400/3600).." Hours "..math.floor(tt%3600/60).." Minutes\n:desktop: RDP INFO\n------------\nCpu :"..getCpu().." %\nMemory :"..getRam().." %\nIP :||"..getIP().."||\n<a:bcrown:969655781534363648>Author : Nippp_12")
   end
end

function botstarts()
if worldloop == true then
    while true do
      main()
      sleep(2000)
    end
  end

  if worldloop == false then
    main()
    sleep(2000)
    removeBot(getBot().name)
    sleep(5000)
  end
end

botstarts()
